{"version":3,"sources":["logo.svg","images/contact.jpg","images/sales.jpg","images/profil.png","images/profil-1.png","images/profil-2.png","component/navbar.component.js","api/index.js","actions/index.js","component/user.component.js","views/App.js","views/Contact.js","component/order.component.js","views/Orders.js","views/Stats.js","views/Home.js","reducers/add.js","reducers/users.js","reducers/products.js","reducers/orders.js","reducers/index.js","saga/users.js","saga/products.js","saga/orders.js","saga/index.js","store/configureStore.js","store/localStorage.js","serviceWorker.js","views/Products.js","index.js"],"names":["module","exports","NavBar","props","state","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","React","Component","getUsers","a","fetch","method","headers","response","json","console","error","getProducts","getOrders","allUsers","users","type","payload","allProducts","products","allOrders","orders","User","this","text","App","handleChange","e","name","target","setState","value","addInfected","coronavirus","infected","componentDidMount","log","src","logo","alt","map","i","key","onChange","onClick","values","addOne","connect","valuesReducer","usersReducer","dispatch","addX","x","fromActions","Contact","style","width","margin","contactImg","waves","class","lg","icon","md","label","rounded","color","fab","Order","image","nbOrder","price_order","ship_address","billing_address","Orders","dataPolar","datasets","data","backgroundColor","labels","dataDoughnut","hoverBackgroundColor","deck","name_order","ordersReducer","Stats","price","quantity","dataLine","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","responsive","bordered","firstname","email","productsReducer","Home","total","forEach","element","length","aria-valuemax","aria-valuemin","aria-valuenow","role","getTTOrders","Card","Img","profil","Body","Title","Text","profil1","profil2","initialState","action","Object","assign","UsersReducer","ProductsReducer","OrdersReducer","appReducer","combineReducers","rootReducer","watchGetUsers","rootSaga","fromApi","put","message","takeLatest","watchGetProducts","watchGetOrders","fork","persistedStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","logger","run","Boolean","window","location","hostname","match","Products","textWhite","description","store","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d86f1be3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.ae5cca95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sales.340557aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profil.61fe2e71.png\";","module.exports = __webpack_public_path__ + \"static/media/profil-1.8afc6dcb.png\";","module.exports = __webpack_public_path__ + \"static/media/profil-2.b28d6df7.png\";","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/Home\">Tableau de bord</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/Orders\">\r\n                                Commandes\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"/Products\">\r\n                               Produits\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"/Stats\" >\r\n                                Statistiques\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link href=\"/Contact\">\r\n                                Contact\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"/\">\r\n                                Accueil\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","export const getUsers = async () => {\r\n    const url ='https://nodea-ppjs.herokuapp.com/v1/users'\r\n    try{\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        return await response.json()\r\n\r\n    }catch(err){\r\n        return console.error(err)\r\n    }\r\n}\r\n\r\n\r\nexport const getProducts = async () => {\r\n    const url ='https://nodea-ppjs.herokuapp.com/v1/products'\r\n    try{\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        return await response.json()\r\n    } catch(err){\r\n        return console.error(err)\r\n    }\r\n}\r\n\r\n\r\nexport const getOrders = async () => {\r\n    const url='https://nodea-ppjs.herokuapp.com/v1/orders'\r\n    try{\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n        return await response.json()\r\n    } catch(err){\r\n        return console.error(err)\r\n    }\r\n}","import * as fromAPI from '../api'\r\n\r\nexport const ADD_ONE = \"ADD_ONE\"\r\nexport const ADD_X = \"ADD_X\"\r\nexport const GET_USERS = \"ALL_USERS\"\r\nexport const GET_USERS_SAGA=\"GET_USERS_SAGA\"\r\nexport const GET_PRODUCTS_SAGA = \"GET_PRODUCTS_SAGA\"\r\nexport const GET_PRODUCTS =\"GET_PRODUCTS\"\r\nexport const GET_ORDERS= \"ALL_ORDERS\"\r\nexport const GET_ORDERS_SAGA =\"GET_ORDERS_SAGA\"\r\nexport const ADD_DATA_SOCKET_SAGA = \"ADD_DATA_SOCKET_SAGA\"\r\n\r\n\r\n\r\nexport const addOne = () =>({\r\n    type: ADD_ONE\r\n\r\n})\r\n\r\nexport const addX = (x) => ({\r\n    type: ADD_X,\r\n    payload: x\r\n})\r\n// Users\r\nexport const allUsers = users => ({\r\n    type: GET_USERS,\r\n    payload: users\r\n})\r\n\r\nexport const getUsers = () => async dispatch => {\r\n    const users = await fromAPI.getUsers()\r\n    dispatch(allUsers(users))\r\n}\r\n\r\nexport const getUsersSaga = () => ({\r\n    type: GET_USERS_SAGA\r\n})\r\n\r\n// Product\r\nexport const allProducts = products => ({\r\n    type: GET_PRODUCTS,\r\n    payload: products\r\n})\r\n\r\nexport const getProducts = () => async dispatch => {\r\n    const products = await fromAPI.getProducts()\r\n    dispatch(allProducts(products))\r\n}\r\n\r\nexport const getProductsSaga = () => ({\r\n    type: GET_PRODUCTS_SAGA\r\n})\r\n\r\n//Orders\r\nexport const allOrders = orders => ({\r\n    type: GET_ORDERS,\r\n    payload: orders\r\n})\r\n\r\nexport const getOrders = () => async dispatch => {\r\n    const orders = await fromAPI.getOrders()\r\n    dispatch(allOrders(orders))\r\n}\r\n\r\nexport const getOrdersSaga = () => ({\r\n    type: GET_ORDERS_SAGA\r\n})\r\n//Socket\r\nexport const addData = (data) => ({\r\n    type: ADD_DATA_SOCKET_SAGA,\r\n    payload: data\r\n})\r\n","import React from 'react';\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>{ this.props.text }</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport NavBar from '../component/navbar.component';\r\nimport logo from '../logo.svg';\r\nimport './App.css'; \r\nimport { connect } from 'react-redux';\r\nimport * as fromActions from '../actions';\r\n\r\n// Import Component\r\nimport User from '../component/user.component'\r\n\r\n\r\n\r\nexport class App extends React.Component {\r\n\r\n\r\nconstructor(props) {\r\n  super(props)\r\n  this.state={\r\n  coronavirus:['JOhn','Jérome']\r\n   }\r\n}\r\n\r\nhandleChange = (e) => {\r\n  let name = e.target.name\r\n  this.setState({\r\n    [name]: e.target.value\r\n  })\r\n}\r\n\r\naddInfected = (e) =>{\r\n  this.setState({\r\n    coronavirus: [...this.state.coronavirus, this.state.infected]\r\n  })\r\n}\r\n\r\ncomponentDidMount = async () =>{\r\n  console.log('component did mount')\r\n  await this.props.getUsers()\r\n}\r\n\r\n  render() {\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar></NavBar>\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          {this.state.coronavirus.map((e,i) => (<p key={i}>{e}</p>))}\r\n        <input type='text' name='infected' onChange={(e) => this.handleChange(e)}/>\r\n        <button onClick={() => this.addInfected()}>Ajouter</button>\r\n        <p>{this.props.values}</p>\r\n        <button onClick={() => this.props.addOne()}>Add On</button>\r\n        { this.props.users.map((e,i) => <User text={e.name}></User>) }\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n     values : state.valuesReducer.value,\r\n     users: state.usersReducer.users\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n     addOne: () => dispatch(fromActions.addOne()),\r\n     addX: (x) => dispatch(fromActions.addX(x)),\r\n     getUsers: () => dispatch(fromActions.getUsersSaga()) \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport NavBar from '../component/navbar.component'\r\nimport { MDBRow, MDBCol, MDBCardBody, MDBIcon, MDBBtn, MDBInput, MDBCardImage } from \"mdbreact\";\r\nimport contactImg from '../images/contact.jpg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\nexport class Contact extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <NavBar></NavBar>\r\n        <MDBCardImage className=\"img-fluid\" style={{ width: '70%', margin: '1% auto 0% auto   ' }} src={contactImg} waves />\r\n        <section className=\"contact-section\">\r\n        <MDBRow class=\"content\">\r\n          <MDBCol lg=\"6\" style={{ margin: 'auto' }}>\r\n            <MDBCardBody className=\"form\">\r\n              <h3 className=\"mt-4\">\r\n                <MDBIcon icon=\"envelope\" className=\"pr-2\" />\r\n              Nous contacter:\r\n              </h3>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                  <div className=\"md-form mb-0\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      id=\"form-contact-name\"\r\n                      label=\"Votre nom\"\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                  <div className=\"md-form mb-0\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      id=\"form-contact-email\"\r\n                      label=\"Votre e-mail\"\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                  <div className=\"md-form mb-0\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      id=\"form-contact-phone\"\r\n                      label=\"Votre téléphone\"\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                  <div className=\"md-form mb-0\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      id=\"form-contact-company\"\r\n                      label=\"Votre société\"\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n              <MDBRow>\r\n                <MDBCol md=\"12\">\r\n                  <div className=\"md-form mb-0\">\r\n                    <MDBInput\r\n                      type=\"textarea\"\r\n                      id=\"form-contact-message\"\r\n                      label=\"Votre message\"\r\n                    />\r\n                    <MDBBtn rounded color=\"blue\">\r\n                      <MDBIcon icon=\"paper-plane\" />\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <MDBRow>\r\n        <MDBCol>\r\n            <MDBCardBody className=\"contact text-center h-100\">\r\n              <h3 className=\"my-4 pb-2\">Information de contact</h3>\r\n              <ul className=\"list-unstyled ml-4\">\r\n                <li>\r\n                  <p>\r\n                    <MDBIcon icon=\"map-marker-alt\" className=\"pr-2\" />\r\n                    Lyon, 69000 FRA\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p>\r\n                    <MDBIcon icon=\"phone\" className=\"pr-2\" />+ 01 234 567 89\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p>\r\n                    <MDBIcon icon=\"envelope\" className=\"pr-2\" />\r\n                    contact@dashboard.com\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n              <hr className=\"hr-light my-4\" />\r\n              <ul className=\"list-inline text-center list-unstyled\">\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"#!\" className=\"p-2 fa-lg w-ic\">\r\n                    <MDBIcon fab icon=\"twitter\" />\r\n                  </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"#!\" className=\"p-2 fa-lg w-ic\">\r\n                    <MDBIcon fab icon=\"linkedin-in\" />\r\n                  </a>\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <a href=\"#!\" className=\"p-2 fa-lg w-ic\">\r\n                    <MDBIcon fab icon=\"instagram\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </MDBCardBody>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </section>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText} from 'mdbreact';\r\nimport image from '../images/sales.jpg';\r\nclass Order extends React.Component {\r\n\r\n    render () \r\n    {\r\n        return (\r\n            <div>\r\n                <MDBCard style={{ width: \"22rem\" }}>\r\n                <MDBCardImage className=\"img-fluid\" src={image} waves />\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle>N° de commande : { this.props.nbOrder}</MDBCardTitle>\r\n                        <MDBCardText>\r\n                            <label>Prix de la commande : { this.props.price_order } €</label>\r\n                            <label>Adresse de livraison : { this.props.ship_address }</label>\r\n                            <label>Adresse de facturation : { this.props.billing_address }</label>\r\n                        </MDBCardText>\r\n                        <MDBCardText>\r\n\r\n                        </MDBCardText>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport NavBar from '../component/navbar.component';\r\nimport OrderItem from '../component/order.component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCardGroup, MDBContainer, MDBRow ,MDBCol } from 'mdbreact';\r\nimport * as fromActions from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\n\r\nexport class Orders extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = {\r\n      dataPolar: {\r\n          datasets: [\r\n            {\r\n              data: [300, 50, 100, 40, 120],\r\n              backgroundColor: [\r\n                \"rgba(247, 70, 74, 0.5)\",\r\n                \"rgba(70, 191, 189, 0.5)\",\r\n                \"rgba(253, 180, 92, 0.5)\",\r\n                \"rgba(148, 159, 177, 0.5)\",\r\n                \"rgba(77, 83, 96, 0.5)\"\r\n              ],\r\n              label: \"My dataset\" // for legend\r\n            }\r\n          ],\r\n          labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"]\r\n        },\r\n      dataDoughnut: {\r\n        labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\r\n        datasets: [\r\n          {\r\n            data: [300, 50, 100, 40, 120],\r\n            backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\r\n            hoverBackgroundColor: [\r\n              \"#FF5A5E\",\r\n              \"#5AD3D1\",\r\n              \"#FFC870\",\r\n              \"#A8B3C5\",\r\n              \"#616774\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount = async () =>{\r\n    console.log('component did mount')\r\n  \r\n    await this.props.getOrders()\r\n  }\r\n\r\n\r\n  render() {    \r\n\r\n    return (        \r\n    <div>\r\n      <NavBar></NavBar>\r\n      <MDBRow className='text-center'>\r\n        <MDBCol>\r\n          <h1 className=\"cardTexte\">Listes des commandes</h1>\r\n        </MDBCol>\r\n      </MDBRow>\r\n      <MDBRow>\r\n        <MDBCol>\r\n          <MDBContainer>\r\n            <MDBCardGroup deck >\r\n              {this.props.orders.map((e,i) =>\r\n                <OrderItem nbOrder={ e.name_order } price_order={ e.price_order }\r\n                ship_address={ e.ship_address } billing_address={ e.billing_address } ></OrderItem>\r\n              )}                                     \r\n            </MDBCardGroup>\r\n          </MDBContainer>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </div>\r\n    );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  orders: state.ordersReducer.orders\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getOrders: () => dispatch(fromActions.getOrdersSaga())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n\r\n","import React from 'react';\r\nimport NavBar from '../component/navbar.component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow , MDBCol, MDBTable, MDBTableHead, MDBTableBody } from 'mdbreact';\r\nimport { Polar, Doughnut } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\nimport * as fromActions from '../actions';\r\n\r\n\r\nexport class Stats extends React.Component {\r\n\r\nstate = {\r\n    dataPolar: {\r\n        datasets: [\r\n          {\r\n            data: [this.props.products[0].price, this.props.products[1].price, this.props.products[2].price, this.props.products[3].price],\r\n            backgroundColor: [\r\n              \"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#4D5360\"\r\n             \r\n            ],\r\n            label: \"My dataset\" // for legend\r\n          }\r\n        ],\r\n        labels: [this.props.products[0].name, this.props.products[1].name, this.props.products[2].name, this.props.products[3].name]\r\n      },\r\n    dataDoughnut: {\r\n      labels: [this.props.products[0].name, this.props.products[1].name , this.props.products[2].name, this.props.products[3].name],\r\n      datasets: [\r\n        {\r\n          data: [this.props.products[0].quantity, this.props.products[1].quantity, this.props.products[2].quantity, this.props.products[3].quantity],\r\n          backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#4D5360\"],\r\n          hoverBackgroundColor: [\r\n            \"#FF5A5E\",\r\n            \"#5AD3D1\",\r\n            \"#FFC870\",\r\n            \"#A8B3C5\",\r\n            \"#616774\"\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    dataLine: {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n        datasets: [\r\n          {\r\n            label: \"My First dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(225, 204,230, .3)\",\r\n            borderColor: \"rgb(205, 130, 158)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(205, 130,1 58)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [65, 59, 80, 81, 56, 55, 40]\r\n          },\r\n          {\r\n            label: \"My Second dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n            borderColor: \"rgb(35, 26, 136)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(35, 26, 136)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n          }\r\n        ]\r\n      }\r\n  }\r\n\r\n\r\n  componentDidMount = async () =>{\r\n    console.log('component did mount')\r\n    await this.props.getProducts()\r\n    await this.props.getUsers()\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <NavBar></NavBar>\r\n            <MDBRow  className=\"text-center\">\r\n            \r\n                <MDBCol>\r\n                <h3 className=\"mt-5\">Stocks des produits</h3>\r\n                    <MDBContainer>\r\n                        \r\n                        <Doughnut data={this.state.dataDoughnut} options={{ responsive: true }} />\r\n                    </MDBContainer>\r\n                    \r\n                </MDBCol>\r\n                <MDBCol>\r\n                <h3 className=\"mt-5\">Prix des produits</h3>\r\n                    <MDBContainer>\r\n                        \r\n                        <Polar data={this.state.dataPolar} options={{ responsive: true }} />\r\n                    </MDBContainer>\r\n                    \r\n                </MDBCol>\r\n               \r\n            </MDBRow>\r\n            <MDBRow  className=\"text-center\">\r\n                <MDBCol>\r\n                <h3 className=\"mt-5\">Liste des utilisateurs</h3>\r\n                    <MDBContainer>\r\n                    <MDBTable bordered>\r\n                    <MDBTableHead>\r\n                            <tr>\r\n                              <th>Id</th>\r\n                              <th>Nom</th>\r\n                              <th>Prénom</th>\r\n                              <th>e-mail</th>\r\n                            </tr>\r\n                          </MDBTableHead>\r\n                      {this.props.users.map((e,i) =>\r\n\r\n                          \r\n                         \r\n                          <MDBTableBody>\r\n                            <tr>\r\n                              <td>{i}</td>\r\n                              <td>{e.name}</td>\r\n                              <td>{e.firstname}</td>\r\n                              <td>{e.email}</td>\r\n                            </tr>\r\n                          </MDBTableBody>\r\n                          \r\n                      \r\n                      \r\n                      )}\r\n                      </MDBTable>\r\n                    </MDBContainer>\r\n                        \r\n                    </MDBCol>\r\n\r\n            </MDBRow>\r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.productsReducer.products,\r\n  users : state.usersReducer.users\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getProducts: () => dispatch(fromActions.getProductsSaga()),\r\n  getUsers: () => dispatch(fromActions.getUsersSaga())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats);\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBCard, MDBIcon, MDBCardBody, MDBCardText } from 'mdbreact';\r\nimport NavBar from '../component/navbar.component';\r\nimport { Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as fromActions from '../actions'\r\nimport profil from  '../images/profil.png';\r\nimport profil1 from '../images/profil-1.png';\r\nimport profil2 from '../images/profil-2.png';\r\nimport './style.css';\r\n\r\nexport class Home extends React.Component {\r\n\r\n\r\nstate = {\r\n\r\n\r\n}\r\n\r\ngetTTOrders() {\r\n  let total = 0;\r\n  this.props.orders.forEach(element => {\r\n    total += element['price_order']\r\n  });\r\n  console.log(this.props.products)\r\n  return total\r\n}\r\n\r\ncomponentDidMount = async () =>{\r\n  console.log('component did mount')\r\n  await this.props.getUsers()\r\n  await this.props.getOrders()\r\n  await this.props.getProducts()\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <NavBar></NavBar>\r\n        <div class=\"content title\">\r\n          <h1>Chiffres clés</h1>\r\n        </div>\r\n        <div class=\"row re-size\">\r\n          <div class=\"col content\">\r\n            <MDBCard class=\"cascading-admin-card\">\r\n              <div class=\"admin-up\">\r\n                <div class=\"data text-align\">\r\n                  <MDBIcon icon=\"chart-pie\" class=\"light-blue lighten-1\"/>\r\n                  <p>Total de produits</p>\r\n                  <h4><strong>{ this.props.products.length }</strong></h4>\r\n                </div>\r\n              </div>\r\n              <MDBCardBody>\r\n                \r\n                <div class=\"progress\">\r\n                  <div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"25\"\r\n                  class=\"progress-bar red darken-2\" role=\"progressbar\" style={{ width: '10%' }}></div>\r\n                </div>\r\n                <MDBCardText>\r\n                  Stock de produits bas (10%)\r\n                </MDBCardText>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </div>\r\n          <div class=\"col content\">\r\n            <MDBCard class=\"cascading-admin-card\">\r\n              <div class=\"admin-up\">\r\n                <div class=\"data text-align\">\r\n                  <MDBIcon icon=\"chart-pie\" class=\"light-blue lighten-1\"/>\r\n                  <p>Prix total des ventes</p>\r\n                  <h4><strong>{ this.getTTOrders() } €</strong></h4>\r\n                </div>\r\n              </div>\r\n              <MDBCardBody>\r\n                <div class=\"progress\">\r\n                  <div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"25\"\r\n                  class=\"progress-bar green darken-2\" role=\"progressbar\" style={{ width: '64%' }}></div>\r\n                </div>\r\n                <MDBCardText>\r\n                  Amélioration des ventes (+64%)\r\n                </MDBCardText>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </div>\r\n          <div class=\"col content\">\r\n            <MDBCard class=\"cascading-admin-card\">\r\n              <div class=\"admin-up\">\r\n                <div class=\"data text-align\">\r\n                  <MDBIcon icon=\"chart-pie\" class=\"light-blue lighten-1\"/>\r\n                  <p>Nombre d'utilisateurs</p>\r\n                  <h4><strong>{ this.props.users.length }</strong></h4>\r\n                </div>\r\n              </div>\r\n              <MDBCardBody>\r\n                <div class=\"progress\">\r\n                  <div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"25\"\r\n                  class=\"progress-bar green darken-2\" role=\"progressbar\" style={{ width: '75%' }}></div>\r\n                </div>\r\n                <MDBCardText>\r\n                  Croissance hebdomadaire (+75%)\r\n                </MDBCardText>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </div>\r\n        </div>\r\n        <div class=\"content title \">\r\n          <h1>Notre équipe</h1>\r\n        </div>\r\n        <div class=\"row text-center\">\r\n          <div class=\"col content\">\r\n            <Card style={{ width: '15rem' }}>\r\n              <Card.Img variant=\"top\" src={profil} />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  {this.props.users[1].name + \" \" + this.props.users[1].firstname}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <strong className=\"mb-2\">Email: </strong>\r\n                  {this.props.users[1].email}          \r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <div class=\"col content\">\r\n            <Card style={{ width: '15rem' }}>\r\n              <Card.Img variant=\"top\" src={profil1} />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  {this.props.users[2].name + \" \" + this.props.users[2].firstname}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <strong className=\"mb-2\">Email: </strong>\r\n                  {this.props.users[2].email}              \r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n          <div class=\"col content\">\r\n            <Card style={{ width: '15rem' }}>\r\n              <Card.Img variant=\"top\" src={profil2} />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  {this.props.users[0].name + \" \" + this.props.users[0].firstname}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  <strong className=\"mb-2\">Email: </strong>\r\n                  {this.props.users[0].email}              \r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  values : state.valuesReducer.value,\r\n  users: state.usersReducer.users,\r\n  products: state.productsReducer.products,\r\n  orders: state.ordersReducer.orders\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUsers: () => dispatch(fromActions.getUsersSaga()),\r\n  getOrders: () => dispatch(fromActions.getOrdersSaga()),\r\n  getProducts: () => dispatch(fromActions.getProductsSaga())\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import {ADD_ONE, ADD_X} from '../actions'\r\n\r\nlet initialState = {\r\n    value:0\r\n}\r\n\r\nconst valuesReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_ONE:\r\n            return Object.assign({}, state, {value: state.value+1})\r\n        case ADD_X:\r\n            return{...state, value: state.value + action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default valuesReducer","import * as fromActions from '../actions'\r\n\r\nlet initialState = {\r\n    users: []\r\n}\r\n\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case fromActions.GET_USERS:\r\n            return {...state, users: [...action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default UsersReducer\r\n","import * as fromActions from '../actions'\r\n\r\nlet initialState = {\r\n    products: []\r\n}\r\n\r\n\r\nconst ProductsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case fromActions.GET_PRODUCTS:\r\n            return {...state, products: [...action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProductsReducer","import * as fromActions from '../actions'\r\n\r\nlet initialState = {\r\n    orders: []\r\n}\r\n\r\n\r\nconst OrdersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case fromActions.GET_ORDERS:\r\n            return {...state, orders: [...action.payload]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default OrdersReducer","import { combineReducers } from 'redux'\r\nimport valuesReducer  from './add'\r\nimport usersReducer  from './users'\r\nimport productsReducer from './products'\r\n//import socketReducer from './socket'\r\nimport ordersReducer from './orders'\r\n\r\nconst appReducer = combineReducers({\r\n    valuesReducer,\r\n    usersReducer,\r\n    productsReducer,\r\n    //socketReducer,\r\n    ordersReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer\r\n","import { takeLatest, put } from 'redux-saga/effects'\r\nimport * as fromActions from '../actions'\r\nimport * as fromApi from '../api'\r\n\r\nfunction* watchGetUsers(action){\r\ntry{\r\n    const users = yield fromApi.getUsers()\r\n    yield put(fromActions.allUsers(users))\r\n} catch (error) {\r\n    yield put({\r\n        type: 'ERROR',\r\n        error: true,\r\n        payload: error.message\r\n    })\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield takeLatest(fromActions.GET_USERS_SAGA, watchGetUsers)\r\n}\r\n\r\nexport default rootSaga ","import { takeLatest, put } from 'redux-saga/effects'\r\nimport * as fromActions from '../actions'\r\nimport * as fromApi from '../api'\r\n\r\nfunction* watchGetProducts(action){\r\ntry{\r\n    const users = yield fromApi.getProducts()\r\n    yield put(fromActions.allProducts(users))\r\n} catch (error) {\r\n    yield put({\r\n        type: 'ERROR',\r\n        error: true,\r\n        payload: error.message\r\n    })\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield takeLatest(fromActions.GET_PRODUCTS_SAGA, watchGetProducts)\r\n}\r\n\r\nexport default rootSaga ","import { takeLatest, put } from 'redux-saga/effects'\r\nimport * as fromActions from '../actions'\r\nimport * as fromApi from '../api'\r\n\r\nfunction* watchGetOrders(action){\r\ntry{\r\n    const orders = yield fromApi.getOrders()\r\n    yield put(fromActions.allOrders(orders))\r\n} catch (error) {\r\n    yield put({\r\n        type: 'ERROR',\r\n        error: true,\r\n        payload: error.message\r\n    })\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield takeLatest(fromActions.GET_ORDERS_SAGA, watchGetOrders)\r\n}\r\n\r\nexport default rootSaga ","import { fork } from 'redux-saga/effects'\r\nimport users from './users'\r\n//import socket from './socket'\r\nimport products from './products'\r\nimport orders from './orders'\r\n\r\nfunction* rootSaga(){\r\n    yield fork(users)\r\n    //yield fork(socket)\r\n    yield fork(products)\r\n    yield fork(orders)\r\n}\r\n\r\nexport default rootSaga","import {createStore, applyMiddleware} from 'redux'\r\nimport rootReducer from '../reducers'\r\nimport logger from 'redux-logger'\r\n//import thunk from 'redux-thunk'\r\nimport { loadState } from './localStorage'\r\nimport { createBrowserHistory } from 'history'\r\nimport { routerMiddleware } from 'react-router-redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from '../saga'\r\n\r\nconst persistedStore = loadState()\r\nexport const history = createBrowserHistory()\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    persistedStore,\r\n    applyMiddleware(sagaMiddleware, routerMiddleware(history), logger)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\n\r\n","export const saveState = (state) => {\r\n    try{\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    }catch(err){\r\n\r\n    }\r\n}\r\n\r\nexport const loadState = () => {\r\n    try{\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    }catch(err){\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const clearState = () =>{\r\n    try{\r\n        window.localStorage.clear()\r\n    }catch(err){\r\n\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport NavBar from '../component/navbar.component';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow ,MDBCol, MDBCard, MDBTable, MDBTableBody,MDBTableHead } from 'mdbreact';\r\nimport { connect } from 'react-redux';\r\nimport * as fromActions from '../actions';\r\nimport './style.css'\r\n\r\n\r\nexport class Products extends React.Component {\r\n\r\n\r\nstate = {\r\n   \r\n  }\r\n\r\n  componentDidMount = async () =>{\r\n    console.log('component did mount')\r\n    await this.props.getProducts()\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n            <NavBar></NavBar>\r\n            <h1  className=\"cardTexte text-center\">Liste des produits</h1>\r\n         \r\n    <MDBRow>\r\n        <MDBCol>\r\n            <MDBContainer>\r\n                <MDBCard>\r\n            <MDBTable>\r\n                    <MDBTableHead color=\"primary-color\" textWhite>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Nom</th>\r\n                        <th>Prix</th>\r\n                        <th>Description</th>\r\n                        <th>Quantité</th>\r\n                        </tr>\r\n                    </MDBTableHead>\r\n                {this.props.products.map((e,i) =>\r\n                     <MDBTableBody>\r\n                     <tr>\r\n                        <td>{i}</td>\r\n                        <td>{e.name}</td>\r\n                        <td>{e.price + \"€\"} </td>\r\n                        <td>{e.description}</td>\r\n                        <td>{e.quantity}</td>\r\n                     </tr>\r\n                 </MDBTableBody>\r\n                \r\n                )}\r\n                   \r\n                   \r\n                    </MDBTable>\r\n                </MDBCard>\r\n            </MDBContainer>\r\n        </MDBCol>\r\n    </MDBRow>\r\n    \r\n        </div>\r\n    );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    products: state.productsReducer.products\r\n  })\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    getProducts: () => dispatch(fromActions.getProductsSaga()),\r\n  })\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './views/App';\r\nimport Contact from './views/Contact';\r\nimport Orders from './views/Orders';\r\nimport Stats from './views/Stats';\r\nimport Home from './views/Home';\r\nimport store, { history} from './store/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport { saveState } from './store/localStorage';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport Products from './views/Products';\r\n\r\nstore.subscribe(() =>{\r\n    saveState(store.getState())\r\n})\r\n\r\n\r\nconst Root = () => {\r\n    return(\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route exact path='/' component={App} />\r\n                    <Route exact path='/Orders' component={Orders} />\r\n                    <Route exact path='/contact' component={Contact} />\r\n                    <Route exact path='/Stats' component={Stats} />\r\n                    <Route exact path='/Home' component={Home} />\r\n                    <Route exact path='/Products' component={Products}/>\r\n                </Switch>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nReactDOM.render(<Root store={store}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}